name: Deploy Staging
on:
  workflow_run:
    types:
      - completed
    workflows:
      - Build
    branches-ignore:
      - main


jobs:
  deploy:
    runs-on: ubuntu-latest
    environment:
      name: staging
      url: ${{ steps.deploy.outputs.NEW_URL }}
    env:
      BRANCH_NAME: ${{ steps.determine-name.outputs.BRANCH_NAME }}
    concurrency:
      group: ${{ steps.determine-name.outputs.BRANCH_NAME }}
      cancel-in-progress: true
    steps:
      - id: determine-name
        name: Determine name
        uses: actions/github-script@v6
        with:
          script: |
            const execSync = require('child_process').execSync;
            let allArtifacts = await github.rest.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: context.payload.workflow_run.id,
            });
            let matchArtifact = allArtifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "build"
            })[0];
            let branchNameArtifact = allArtifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "branch-name"
            })[0];
            let download = await github.rest.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: matchArtifact.id,
               archive_format: 'zip',
            });
            let download2 = await github.rest.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: branchNameArtifact,
               archive_format: 'zip',
            });
            let fs = require('fs');
            fs.writeFileSync(`build.zip`, Buffer.from(download.data));
            fs.writeFileSync(`branch-name.zip`, Buffer.from(download2.data));
            execSync(`unzip build.zip -d dist`);
            execSync(`unzip branch-name.zip`);
            let branchName = fs.readFileSync('branch-name.txt', 'utf8');
            fs.appendFileSync(process.env.GITHUB_ENV, "BRANCH_NAME=" + branchName + "\n");
      - uses: actions/checkout@v3
      - name: Build zip
        run: |
          cd dist
          zip -r ../${{ env.BRANCH_NAME }}.flyboat-dev.zip *
      - name: Deploy to Staging
        id: deploy
        run: |
          curl -X 'POST' --fail-with-body \
          'https://flyboat-dev.biishop.org/' \
          -H 'accept: application/json' \
          -H 'Content-Type: multipart/form-data' \
          -F 'key=${{ secrets.DEPLOY_KEY }}' \
          -F 'data=@${{ env.BRANCH_NAME }}.flyboat-dev.zip'
          echo "NEW_URL=https://${{ env.BRANCH_NAME }}.flyboat-dev.biishop.org" >> $GITHUB_OUTPUT
      - name: Leave comment
        if: github.event_name == 'pull_request_target'
        uses: thollander/actions-comment-pull-request@v2
        with:
          message: |
            Deployed to staging: ${{ steps.deploy.outputs.NEW_URL }}
